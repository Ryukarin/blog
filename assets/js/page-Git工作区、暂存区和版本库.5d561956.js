(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1120:function(t,e,i){"use strict";i.r(e);var _=i(1),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"git-工作区、暂存区和版本库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-工作区、暂存区和版本库"}},[t._v("#")]),t._v(" Git 工作区、暂存区和版本库")]),t._v(" "),_("h3",{attrs:{id:"基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),_("p",[t._v("我们先来理解下 Git 工作区、暂存区和版本库概念：")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("工作区")]),t._v("：就是你在电脑里能看到的目录。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("暂存区")]),t._v("：英文叫 stage 或 index。一般存放在"),_("code",[t._v(".git")]),t._v(" 目录下的 index 文件（"),_("code",[t._v(".git/index")]),t._v("）中，所以我们把暂存区有时也叫作索引（index）。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("版本库")]),t._v("：工作区有一个隐藏目录 "),_("code",[t._v(".git")]),t._v("，这个不算工作区，而是 Git 的版本库。")])])]),t._v(" "),_("p",[t._v("下面这个图展示了工作区、版本库中的暂存区和版本库之间的关系：")]),t._v(" "),_("p",[_("img",{attrs:{src:i(848),alt:"git_wsb",loading:"lazy"}})]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("图解")]),t._v(" "),_("ul",[_("li",[t._v('图中左侧为工作区，右侧为版本库。在版本库中标记为 "index" 的区域是暂存区（stage/index），标记为 "master" 的是 master 分支所代表的目录树。')]),t._v(" "),_("li",[t._v('图中我们可以看出此时 "HEAD" 实际是指向 master 分支的一个"游标"。所以图示的命令中出现 HEAD 的地方可以用 master 来替换。')]),t._v(" "),_("li",[t._v('图中的 objects 标识的区域为 Git 的对象库，实际位于 ".git/objects" 目录下，里面包含了创建的各种对象及内容。')]),t._v(" "),_("li",[t._v("当对工作区修改（或新增）的文件执行 "),_("code",[t._v("git add")]),t._v(" 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。")]),t._v(" "),_("li",[t._v("当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。")]),t._v(" "),_("li",[t._v("当执行 "),_("code",[t._v("git reset HEAD")]),t._v(" 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。")]),t._v(" "),_("li",[t._v("当执行 "),_("code",[t._v("git rm --cached <file>")]),t._v(" 命令时，会直接从暂存区删除文件，工作区则不做出改变。")]),t._v(" "),_("li",[t._v("当执行 "),_("code",[t._v("git checkout .")]),t._v(" 或者 "),_("code",[t._v("git checkout -- <file>")]),t._v(" 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。")]),t._v(" "),_("li",[t._v("当执行 "),_("code",[t._v("git checkout HEAD .")]),t._v(" 或者 "),_("code",[t._v("git checkout HEAD <file>")]),t._v(" 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。")])])])])}),[],!1,null,null,null);e.default=v.exports},848:function(t,e,i){t.exports=i.p+"assets/img/git_wsb.899c6823.jpg"}}]);