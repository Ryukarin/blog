(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{1099:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("容器是 Docker 的另 一个核心概念。简单来说，容器是镜像的一个运行实例。所不同的是，镜像是静态的只读文件，而容器带有运行时需要的可写文件层，同时，容器中的应用进程处于运行状态。")]),s._v(" "),a("p",[s._v("如果认为虚拟机是模拟运行的一整套操作系统（包括内核、应用运行态环境和其他系统环境）和跑在上面的应用。那么 Docker 容器就是独立运行的一个（或一组）应用，以及它们必需的运行环境。")]),s._v(" "),a("p",[s._v("接下来将具体介绍围绕容器的重要操作，包括创建一个容器、启动容器、终止一个容器、进入容器内执行操作、删除容器和通过导人导出容器来实现容器迁移等。")]),s._v(" "),a("h2",{attrs:{id:"创建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[s._v("#")]),s._v(" 创建容器")]),s._v(" "),a("p",[s._v("从现在开始，忘掉“朦肿”的虚拟机吧，对容器的操作就像直接操作应用一样简单和快速。")]),s._v(" "),a("p",[s._v("这里主要介绍 Docker 容器的 "),a("code",[s._v("create")]),s._v("、"),a("code",[s._v("start")]),s._v("、"),a("code",[s._v("run")]),s._v("、"),a("code",[s._v("wait")]),s._v(" 和 "),a("code",[s._v("logs")]),s._v(" 子命令。")]),s._v(" "),a("h3",{attrs:{id:"_1、新建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、新建容器"}},[s._v("#")]),s._v(" 1、新建容器")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("docker [container] create")]),s._v(" 命令新建一个容器，例如：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container create -it ubuntu:latest\nUnable to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" image "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ubuntu:latest'")]),s._v(" locally\nlatest: Pulling from library/ubuntu\n35807b77a593: Pull complete \nDigest: sha256:9d6a8699fb5c9c39cf08a0871bd6219f0400981c570894cd8cbea30d3424a31f\nStatus: Downloaded newer image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ubuntu:latest\nfcc4e0885754efa016594c98d606dd5666ad751c76884c41685d46715a9a70fc\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE           COMMAND   CREATED              STATUS                    PORTS     NAMES\nfcc4e0885754   ubuntu:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    About a minute ago   Created                             gracious_ellis\ndba94731dbca   centos          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" hours ago         Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" hours ago             romantic_benz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("使用 "),a("code",[s._v("docker [container] create")]),s._v(" 命令新建的容器处于停止状态，可以使用 "),a("code",[s._v("docker [container] start")]),s._v(" 命令来启动它。")]),s._v(" "),a("p",[s._v("由于容器是整个 Docker 技术栈的核心，"),a("code",[s._v("create")]),s._v(" 命令和后续的 "),a("code",[s._v("run")]),s._v(" 命令支持的选项都十分复杂，需要你在实践中不断体会。")]),s._v(" "),a("p",[s._v("选项主要包括如下几大类：与容器运行模式相关、与容器环境配置相关、与容器资源限制和安全保护相关，参见表 4-1 和表 4-3。")]),s._v(" "),a("p",[a("u",[s._v("表4-1")]),s._v("\tcreate 命令与容器运行模式相关的选项")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("-a，--attach=[ ]")]),s._v(" "),a("td",[s._v("是否绑定到标准输入、输出和错误")])]),s._v(" "),a("tr",[a("td",[s._v("-d，--detach=true|false")]),s._v(" "),a("td",[s._v("是否在后台运行容器，默认为否")])]),s._v(" "),a("tr",[a("td",[s._v('--detach-keys=" "')]),s._v(" "),a("td",[s._v("从 attach 模式退出的快捷键")])]),s._v(" "),a("tr",[a("td",[s._v('--entrypoint=" "')]),s._v(" "),a("td",[s._v("镜像存在入口命令时，覆盖为新的命令")])]),s._v(" "),a("tr",[a("td",[s._v("--expose=[ ]")]),s._v(" "),a("td",[s._v("指定容器会暴露出来的端口或端口范围")])]),s._v(" "),a("tr",[a("td",[s._v("--group-add=[ ]")]),s._v(" "),a("td",[s._v("运行容器的用户组")])]),s._v(" "),a("tr",[a("td",[s._v("-i，--interactive=true|false")]),s._v(" "),a("td",[s._v("保持标准输入打开，默认为 false")])]),s._v(" "),a("tr",[a("td",[s._v('--ipc=" "')]),s._v(" "),a("td",[s._v("容器 IPC 命名空间，可以为其他容器或主机")])]),s._v(" "),a("tr",[a("td",[s._v('--isolation="default"')]),s._v(" "),a("td",[s._v("容器使用的隔离机制")])]),s._v(" "),a("tr",[a("td",[s._v('--log-driver="json-file"')]),s._v(" "),a("td",[s._v("指定容器的日志驱动类型，可以为 json-file、syslog、journald、gelf、fluentd、awslogs、splunk、etwlogs、gcplogs或none")])]),s._v(" "),a("tr",[a("td",[s._v("--log-opt=[ ]")]),s._v(" "),a("td",[s._v("传递给日志驱动的选项")])]),s._v(" "),a("tr",[a("td",[s._v('--net="bridge"')]),s._v(" "),a("td",[s._v("指定容器网络模式，包括 bridge、none、其他容器内网络、host 的网络或某个现有网络等")])]),s._v(" "),a("tr",[a("td",[s._v("--net-alias=[ ]")]),s._v(" "),a("td",[s._v("容器在网络中的别名")])]),s._v(" "),a("tr",[a("td",[s._v("-P，--publish-all=true|false")]),s._v(" "),a("td",[s._v("通过 NAT 机制将容器标记暴露的端口自动映射到本地主机的临时端口")])]),s._v(" "),a("tr",[a("td",[s._v("-p，--publishs=[ ]")]),s._v(" "),a("td",[s._v("指定如何映射到本地主机端口，例如 -p 11234-12234:1234-2234")])]),s._v(" "),a("tr",[a("td",[s._v("--pid=host")]),s._v(" "),a("td",[s._v("容器的 PID 命名空间")])]),s._v(" "),a("tr",[a("td",[s._v('--userns=" "')]),s._v(" "),a("td",[s._v("启用 userns-remap 时配置用户命名空间的模式")])]),s._v(" "),a("tr",[a("td",[s._v("--uts=host")]),s._v(" "),a("td",[s._v("容器的 UTS 命名空间")])]),s._v(" "),a("tr",[a("td",[s._v('--restart="no"')]),s._v(" "),a("td",[s._v("容器的重启策略，包括 no、on-failure[:max-retry]、always、unless-stopped 等")])]),s._v(" "),a("tr",[a("td",[s._v("-rm=true|false")]),s._v(" "),a("td",[s._v("容器退出后是否自动删除，不能跟 -d 同时使用")])]),s._v(" "),a("tr",[a("td",[s._v("-t，--tty=true|false")]),s._v(" "),a("td",[s._v("是否分配一个伪终端，默认为 false")])]),s._v(" "),a("tr",[a("td",[s._v("--tmpfs=[ ]")]),s._v(" "),a("td",[s._v("挂载临时文件系统到容器")])]),s._v(" "),a("tr",[a("td",[s._v("-v|--volume[=[[HOST-DIR:]CONTAINER-DIR [:OPTIONS]]]")]),s._v(" "),a("td",[s._v("挂载主机上的文件卷到容器内")])]),s._v(" "),a("tr",[a("td",[s._v('--volume-driver=" "')]),s._v(" "),a("td",[s._v("挂载文件卷的驱动类型")])]),s._v(" "),a("tr",[a("td",[s._v("--volumes-from=[ ]")]),s._v(" "),a("td",[s._v("从其他容器挂载卷")])]),s._v(" "),a("tr",[a("td",[s._v('-w，--workdir=" "')]),s._v(" "),a("td",[s._v("容器内的默认工作目录")])])])]),s._v(" "),a("p",[a("u",[s._v("表 4-2")]),s._v("\tcreate 命令与容器环境和配置相关的选项")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("--add-host=[ ]")]),s._v(" "),a("td",[s._v("在容器内添加一个主机名到 IP 地址的映射关系（通过 /etc/hosts 文件）")])]),s._v(" "),a("tr",[a("td",[s._v("--device=[ ]")]),s._v(" "),a("td",[s._v("映射物理机上的设备到容器内")])]),s._v(" "),a("tr",[a("td",[s._v("--dns-search=[ ]")]),s._v(" "),a("td",[s._v("DNS 搜索域")])]),s._v(" "),a("tr",[a("td",[s._v("--dns-opt=[ ]")]),s._v(" "),a("td",[s._v("自定义的 DNS 选项")])]),s._v(" "),a("tr",[a("td",[s._v("--dns=[ ]")]),s._v(" "),a("td",[s._v("自定义的 DNS 服务器")])]),s._v(" "),a("tr",[a("td",[s._v("-e，--env=[ ]")]),s._v(" "),a("td",[s._v("指定容器内环境变量")])]),s._v(" "),a("tr",[a("td",[s._v("--env-file=[ ]")]),s._v(" "),a("td",[s._v("从文件中读取环境变量到容器内")])]),s._v(" "),a("tr",[a("td",[s._v('-h，--hostname=" "')]),s._v(" "),a("td",[s._v("指定容器内的主机名")])]),s._v(" "),a("tr",[a("td",[s._v('--ip=" "')]),s._v(" "),a("td",[s._v("指定容器的 IPv4 地址")])]),s._v(" "),a("tr",[a("td",[s._v('--ip6=" "')]),s._v(" "),a("td",[s._v("指定容器的 IPv6 地址")])]),s._v(" "),a("tr",[a("td",[s._v("--link=[<name or id>:alias]")]),s._v(" "),a("td",[s._v("链接到其他容器")])]),s._v(" "),a("tr",[a("td",[s._v("--link-local-ip=[ ]:")]),s._v(" "),a("td",[s._v("容器的本地链接地址列表")])]),s._v(" "),a("tr",[a("td",[s._v('--mac-address=" "')]),s._v(" "),a("td",[s._v("指定容器的 Mac 地址")])]),s._v(" "),a("tr",[a("td",[s._v('--name=" "')]),s._v(" "),a("td",[s._v("指定容器的别名")])])])]),s._v(" "),a("p",[a("u",[s._v("表 4-3")]),s._v("\tcreate 命令与容器资源限制和安全保护相关的选项")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("--blkio-weight=10~1000")]),s._v(" "),a("td",[s._v("容器读写块设备的 I/O 性能权重，默认为 0")])]),s._v(" "),a("tr",[a("td",[s._v("--blkio-weight-device=[DEVICE_NAME:WEIGHT]")]),s._v(" "),a("td",[s._v("指定各个块设备的 I/O 性能权重")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-shares=0")]),s._v(" "),a("td",[s._v("允许容器使用 CPU 资源的相对权重，默认一个容器能用满一个核的 CPU")])]),s._v(" "),a("tr",[a("td",[s._v("--cap-add=[ ]")]),s._v(" "),a("td",[s._v("增加容器的 Linux 指定安全能力")])]),s._v(" "),a("tr",[a("td",[s._v("--cap-drop=[ ]")]),s._v(" "),a("td",[s._v("移除容器的 Linux 指定安全能力")])]),s._v(" "),a("tr",[a("td",[s._v('--cgroup-parent=" "')]),s._v(" "),a("td",[s._v("容器 cgroups 限制的创建路径")])]),s._v(" "),a("tr",[a("td",[s._v('--cidfile=" "')]),s._v(" "),a("td",[s._v("指定容器的进程 ID 号写到文件")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-period=0")]),s._v(" "),a("td",[s._v("限制容器在 CFS 调度器下的 CPU 占用时间片")])]),s._v(" "),a("tr",[a("td",[s._v('--cpuset-cpus=" "')]),s._v(" "),a("td",[s._v("限制容器能使用哪些 CPU 核心")])]),s._v(" "),a("tr",[a("td",[s._v('--cpuset-mems=" "')]),s._v(" "),a("td",[s._v("NUMA 架构下使用哪些核心的内存")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-quota=0")]),s._v(" "),a("td",[s._v("限制容器在 CFS 调度器下的 CPU 配额")])]),s._v(" "),a("tr",[a("td",[s._v("--device-read-bps=[ ]")]),s._v(" "),a("td",[s._v("挂载设备的读吞吐率（以 bps 为单位）限制")])]),s._v(" "),a("tr",[a("td",[s._v("--device-write-bps=[ ]")]),s._v(" "),a("td",[s._v("挂载设备的写吞吐率（以 bps 为单位）限制")])]),s._v(" "),a("tr",[a("td",[s._v("--device-read-iops=[ ]")]),s._v(" "),a("td",[s._v("挂载设备的读速率（以每秒 i/o 次数为单位）限制")])]),s._v(" "),a("tr",[a("td",[s._v("--device-write-iops=[ ]")]),s._v(" "),a("td",[s._v("挂载设备的写速率（以每秒 i/o 次数为单位）限制")])]),s._v(" "),a("tr",[a("td",[s._v('--health-cmd=" "')]),s._v(" "),a("td",[s._v("指定检查容器健康状态的命令")])]),s._v(" "),a("tr",[a("td",[s._v("--health-interval=0s")]),s._v(" "),a("td",[s._v("执行健康检查的间隔时间，单位可以为 ms、s、m 或 h")])]),s._v(" "),a("tr",[a("td",[s._v("--health-retries=int")]),s._v(" "),a("td",[s._v("健康检查失败重试次数，超过则认为不健康")])]),s._v(" "),a("tr",[a("td",[s._v("--health-start-period=0s")]),s._v(" "),a("td",[s._v("容器启动后进行健康检查的等待时间，单位可以为 ms、s、m 或 h")])]),s._v(" "),a("tr",[a("td",[s._v("--health-timeout=0s")]),s._v(" "),a("td",[s._v("健康检查的执行超时，单位可以为 ms、s、m 或 h")])]),s._v(" "),a("tr",[a("td",[s._v("--no-healthcheck=true|false")]),s._v(" "),a("td",[s._v("是否禁用健康检查")])]),s._v(" "),a("tr",[a("td",[s._v("--init")]),s._v(" "),a("td",[s._v("在容器中执行一个 init 进程，来负责响应信号和处理僵尸状态子进程")])]),s._v(" "),a("tr",[a("td",[s._v('--kernel-memory=" "')]),s._v(" "),a("td",[s._v("限制容器使用内核的内存大小，单位可以是 b、k、m 或 g")])]),s._v(" "),a("tr",[a("td",[s._v('-m，--memory=" "')]),s._v(" "),a("td",[s._v("限制容器内应用使用的内存，单位可以是 b、k、m 或 g")])]),s._v(" "),a("tr",[a("td",[s._v('--memory-reservation=" "')]),s._v(" "),a("td",[s._v("当系统中内存过低时，容器会被强制限制内存到给定值，默认情况下等于内存限制值")])]),s._v(" "),a("tr",[a("td",[s._v('--memory-swap="LIMIT"')]),s._v(" "),a("td",[s._v("限制容器使用内存和交换区的总大小")])]),s._v(" "),a("tr",[a("td",[s._v("--oom-kill-disable=true|false")]),s._v(" "),a("td",[s._v("内存耗尽时是否杀死容器")])]),s._v(" "),a("tr",[a("td",[s._v('--oom-score-adj=" "')]),s._v(" "),a("td",[s._v("调整容器的内存耗尽参数")])]),s._v(" "),a("tr",[a("td",[s._v('--pids-limit=" "')]),s._v(" "),a("td",[s._v("限制容器的 pid 个数")])]),s._v(" "),a("tr",[a("td",[s._v("--privileged=true|false")]),s._v(" "),a("td",[s._v("是否给容器高权限，这意味着容器内应用将不受权限的限制，一般不推荐")])]),s._v(" "),a("tr",[a("td",[s._v("--read-only=true|false")]),s._v(" "),a("td",[s._v("是否让容器内的文件系统只读")])]),s._v(" "),a("tr",[a("td",[s._v("--security-opt=[ ]")]),s._v(" "),a("td",[s._v("指定一些安全参数，包括权限、安全能力、apparmor 等")])]),s._v(" "),a("tr",[a("td",[s._v("--stop-signal=SIGTERM")]),s._v(" "),a("td",[s._v("指定停止容器的系统信号")])]),s._v(" "),a("tr",[a("td",[s._v('--gshm-size=" "')]),s._v(" "),a("td",[s._v("/dev/shm的大小")])]),s._v(" "),a("tr",[a("td",[s._v("--gsig-proxy=true|false")]),s._v(" "),a("td",[s._v("是否代理收到的信号给应用，默认为 true，不能代理 SIGCHLD、SIGSTOP 和 SIGKILL 信号")])]),s._v(" "),a("tr",[a("td",[s._v('--memory-swappiness="0~100"')]),s._v(" "),a("td",[s._v("调整容器的内存交换区参数")])]),s._v(" "),a("tr",[a("td",[s._v('-u，--user=" "')]),s._v(" "),a("td",[s._v("指定在容器内执行命令的用户信息")])]),s._v(" "),a("tr",[a("td",[s._v('--userns=" "')]),s._v(" "),a("td",[s._v("指定用户命名空间")])]),s._v(" "),a("tr",[a("td",[s._v("--ulimit=[ ]")]),s._v(" "),a("td",[s._v("通过 ulimit 来限制最大文件数、最大进程数等")])])])]),s._v(" "),a("p",[s._v("其他选项还包括：")]),s._v(" "),a("ul",[a("li",[s._v("-l，--label=[ ]：以键值对方式指定容器的标签信息；")]),s._v(" "),a("li",[s._v("--label-file=[ ]：从文件中读取标签信息。")])]),s._v(" "),a("h3",{attrs:{id:"_2、启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、启动容器"}},[s._v("#")]),s._v(" 2、启动容器")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("docker [container] start")]),s._v(" 命令来启动一个已经创建的容器。例如，启动刚创建的 ubuntu 容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start fcc\nfcc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动ID为fcc开头的容器（开头为 fcc 的 ID ，确保可以确定是哪一个容器）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("此时，通过 "),a("code",[s._v("docker ps")]),s._v(" 命令，可以查看到一个运行中的容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" \nCONTAINER ID   IMAGE           COMMAND   CREATED       STATUS              PORTS     NAMES\nfcc4e0885754   ubuntu:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago   Up About a minute             gracious_ellis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_3、新建井启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、新建井启动容器"}},[s._v("#")]),s._v(" 3、新建井启动容器")]),s._v(" "),a("p",[s._v("除了创建容器后通过 "),a("code",[s._v("start")]),s._v(" 命令来启动，也可以直接新建并启动容器。")]),s._v(" "),a("p",[s._v("所需要的命令主要为 "),a("code",[s._v("docker [container] run")]),s._v(" 命令，等价于先执行 "),a("code",[s._v("docker [container] create")]),s._v(" 命令，再执行  "),a("code",[s._v("docker [container] start")]),s._v("。")]),s._v(" "),a("p",[s._v("例如，下面的命令输出 一个“Hello World“，之后容器自动终止：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run ubuntu /bin/echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello world'")]),s._v("\nHello world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这跟在本地直接执行 "),a("code",[s._v("/bin/echo 'hello world'")]),s._v(" 相比几乎感觉不出任何区别。")]),s._v(" "),a("p",[s._v("当利用 "),a("code",[s._v("docker [container] run")]),s._v(" 来创建并启动容器时，Docker 在后台运行的标准操作包括：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("检查本地是否存在指定的镜像，不存在就从公有仓库下载；")])]),s._v(" "),a("li",[a("p",[s._v("利用镜像创建一个容器，并启动该容器；")])]),s._v(" "),a("li",[a("p",[s._v("分配一个文件系统给容器，并在只读的镜像层外面挂载一层可读写层；")])]),s._v(" "),a("li",[a("p",[s._v("从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去；")])]),s._v(" "),a("li",[a("p",[s._v("从网桥的地址池配置一个 IP 地址给容器；")])]),s._v(" "),a("li",[a("p",[s._v("执行用户指定的应用程序；")])]),s._v(" "),a("li",[a("p",[s._v("执行完毕后容器被自动终止 。")])])]),s._v(" "),a("p",[s._v("下面的命令启动一个 bash 终端，允许用户进行交互：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it ubuntu:18.04 /bin/bash\nroot@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其中，-t 选项让 Docker 分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，-i 则让容器的标准输入保持打开。更多的命令选项可以通过 "),a("code",[s._v("man docker-run")]),s._v(" 命令来查看。")]),s._v(" "),a("p",[s._v("在交互模式下，用户可以通过所创建的终端来输人命令，例如：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pwd")]),s._v("\n/\nroot@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\nroot@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps")]),s._v("\n  PID TTY          TIME CMD\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nroot@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("在容器内用 "),a("code",[s._v("ps")]),s._v(" 命令查看进程，可以看到，只运行了 bash 应用，并没有运行其他无关的进程。用户可以按 "),a("kbd",[s._v("Ctrl")]),s._v("+"),a("kbd",[s._v("D")]),s._v(" 或输入 "),a("code",[s._v("exit")]),s._v(" 命令来退出容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@b76dabdabb3f:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n$ \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("对于所创建的 bash 容器，当用户使用 "),a("code",[s._v("exit")]),s._v(" 命令退出 bash 进程之后，容器也会自动退出。这是因为对于容器来说，当其中的应用退出后，容器的使命完成，也就没有继续运行的必要了。")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("docker container wait CONTAINER [CONTAINER...]")]),s._v(" 子命令来等待容器退出，并打印退出返回结果。")]),s._v(" "),a("p",[s._v("某些时候，执行 "),a("code",[s._v("docker [container] run")]),s._v(" 的时候因为命令无法正常执行容器会出错直接退出，此时可以查看退出的错误代码。")]),s._v(" "),a("p",[s._v("默认情况下，常见错误代码包括：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("125：Docker daemon 执行出错，例如指定了不支持的 Docker 命令参数；")])]),s._v(" "),a("li",[a("p",[s._v("126：所指定命令无法执行，例如权限出错；")])]),s._v(" "),a("li",[a("p",[s._v("127：容器内命令无法找到。")])])]),s._v(" "),a("p",[s._v("命令执行后出错，会默认返回命令的退出错误码。")]),s._v(" "),a("h3",{attrs:{id:"_4、守护态运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、守护态运行"}},[s._v("#")]),s._v(" 4、守护态运行")]),s._v(" "),a("p",[s._v("更多的时候，需要让 Docker 容器在后台以守护态（Daemonized）形式运行。此时，可以\n通过添加 -d 参数来实现。")]),s._v(" "),a("p",[s._v("例如，下面的命令会在后台运行容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d ubuntu /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"while true; do echo hello world; sleep 1; done"')]),s._v("\n3bbfb70ef02e07b81229d56259d07c0bd75bb62128c4cef3a81a09c08a920ff9\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("容器启动后会返回一个唯一的 id，也可以通过 "),a("code",[s._v("docker ps")]),s._v(" 或 "),a("code",[s._v("docker container ls")]),s._v(" 命令来查看容器信息：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE           COMMAND                  CREATED              STATUS              PORTS     NAMES\n3bbfb70ef02e   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh -c \'while t…"')]),s._v("   About a minute ago  Up About a minute             beautiful_ganguly\nfcc4e0885754   ubuntu:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" hours ago          Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours                    gracious_ellis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_5、查看容器输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、查看容器输出"}},[s._v("#")]),s._v(" 5、查看容器输出")]),s._v(" "),a("p",[s._v("要获取容器的输出信息，可以通过 "),a("code",[s._v("docker [container] logs")]),s._v(" 命令。")]),s._v(" "),a("p",[s._v("该命令支持的选项包括：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("-details：打印详细信息；")])]),s._v(" "),a("li",[a("p",[s._v("-f，-follow：持续保持输出；")])]),s._v(" "),a("li",[a("p",[s._v("-since string：输出从某个时间开始的日志；")])]),s._v(" "),a("li",[a("p",[s._v("-tail string：输出最近的若干日志；")])]),s._v(" "),a("li",[a("p",[s._v("-t，timestamps：显示时间戳信息；")])]),s._v(" "),a("li",[a("p",[s._v("-until string：输出某个时间之前的日志。")])])]),s._v(" "),a("p",[s._v("例如，查看某容器的输出可以使用如下命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs 3bbfb70ef02e\nhello world\nhello world\nhello world\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"停止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停止容器"}},[s._v("#")]),s._v(" 停止容器")]),s._v(" "),a("p",[s._v("这里主要介绍 Docker 容器的 "),a("code",[s._v("pause/unpause")]),s._v("、"),a("code",[s._v("stop")]),s._v(" 和 "),a("code",[s._v("prune")]),s._v(" 子命令。")]),s._v(" "),a("h3",{attrs:{id:"_1、暂停容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、暂停容器"}},[s._v("#")]),s._v(" 1、暂停容器")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("docker [container] pause CONTAINER [CONTAINER...]")]),s._v(" 命令来暂停一个运行中的容器。")]),s._v(" "),a("p",[s._v("例如，启动一个容器，并将其暂停，处于 paused 状态的容器，可以使用 "),a("code",[s._v("docker [container] unpause CONTAINER [CONTAINER...]")]),s._v(" 命令来恢复到运行状态。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建一个容器，名字为 test，查看其状态")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v(" -it ubuntu "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nroot@c8d20c12cccb:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE     COMMAND   CREATED         STATUS                     PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" seconds ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" seconds ago             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED          STATUS         PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" seconds             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#暂停容器")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pause "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" \nCONTAINER ID   IMAGE     COMMAND   CREATED          STATUS                   PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("36")]),s._v(" seconds "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Paused"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#恢复暂停的容器")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" unpause "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED              STATUS          PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    About a minute ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),s._v(" seconds             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"_2、终止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、终止容器"}},[s._v("#")]),s._v(" 2、终止容器")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("docker [container] stop")]),s._v(" 来终止一个运行中的容器。该命令的格式为 "),a("code",[s._v("docker")]),s._v(" "),a("code",[s._v("[container] stop [-t|--time[=10]] [CONTAINER...]")]),s._v("。")]),s._v(" "),a("p",[s._v("该命令会首先向容器发送 SIGTERM 信号，等待一段超时时间后（默认为 10 秒），再发\n送 SIGKILL 信号来终止容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE     COMMAND   CREATED          STATUS                     PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" minutes ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" seconds ago             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("此时，执行 docker container prune 命令，会自动清除掉所有处于停止状态的容器。此外，还可以通过 "),a("code",[s._v("docker [container] kill")]),s._v(" 直接发送 SIGKILL 信号来强行终止容器。")]),s._v(" "),a("p",[s._v("当 Docker 容器中指定的应用终结时，容器也会自动终止。例如，对于前面只启动了一个终端的容器，用户通过 "),a("code",[s._v("exit")]),s._v(" 命令或 "),a("kbd",[s._v("Ctrl")]),s._v("+"),a("kbd",[s._v("d")]),s._v(" 来退出终端时，所创建的容器立刻终止，处于 stopped 状态。")]),s._v(" "),a("p",[s._v("可以用 "),a("code",[s._v("docker ps -qa")]),s._v(" 命令看到所有容器的 ID。例如：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aq\n3c64d4d3197c\n08bd1bc56ed2\nc8d20c12cccb\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("处于终止状态的容器，可以通过 "),a("code",[s._v("docker [container] start")]),s._v(" 命令来重新启动：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE           COMMAND       CREATED      STATUS                     PORTS     NAMES\n3c64d4d3197c   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                cool_bell\n08bd1bc56ed2   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                gracious_tesla\nc8d20c12cccb   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" seconds ago             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start c8d20c12cccb\nc8d20c12cccb\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED      STATUS         PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" seconds             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("code",[s._v("docker [container] restart")]),s._v(" 命令会将一个运行态的容器先终止，然后再重新启动：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart c8d20c12cccb\nc8d20c12cccb\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED      STATUS         PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" seconds             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"进人容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进人容器"}},[s._v("#")]),s._v(" 进人容器")]),s._v(" "),a("p",[s._v("在使用 -d 参数时，容器启动后会进入后台，用户无法看到容器中的信息，也无法进行操作。\n这个时候如果需要进入容器进行操作，推荐使用官方的 "),a("code",[s._v("attach")]),s._v(" 或 "),a("code",[s._v("exec")]),s._v(" 命令。")]),s._v(" "),a("h3",{attrs:{id:"_1、attach-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、attach-命令"}},[s._v("#")]),s._v(" 1、attach 命令")]),s._v(" "),a("p",[a("code",[s._v("attach")]),s._v(" 是 Docker 自带的命令，命令格式为：")]),s._v(" "),a("p",[a("code",[s._v("docker [container] attach [--detach-keys[=[]]] \\[--no-stdin] [--sig-proxy[=true]] CONTAINER")])]),s._v(" "),a("p",[s._v("这个命令支持三个主要选项：")]),s._v(" "),a("ul",[a("li",[s._v("--detach-keys [=[]]：指定退出 attach 模式的快捷键序列，默认是 CTRL-p CTRL-q；")]),s._v(" "),a("li",[s._v("--no-stdin=true|false：是否关闭标准输入，默认是保持打开；")]),s._v(" "),a("li",[s._v("--sig-proxy=true|false：是否代理收到的系统信号给应用进程，默认为 true。")])]),s._v(" "),a("p",[s._v("下面示例如何使用该命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd ubuntu\n4be7970cb6b869a4857887036a6ae555f412a8fbe785ff71f027214276f14a1c\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED         STATUS         PORTS     NAMES\n4be7970cb6b8   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" seconds             priceless_chandrasekhar\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" attach priceless_chandrasekhar \nroot@4be7970cb6b8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("然而使用 "),a("code",[s._v("attach")]),s._v(" 命令有时候并不方便。当多个窗口同时 "),a("code",[s._v("attach")]),s._v(" 到同一个容器的时候，所有窗口都会同步显示；当某个窗口因命令阻塞时，其他窗口也无法执行操作了。")]),s._v(" "),a("h3",{attrs:{id:"_2、exec-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、exec-命令"}},[s._v("#")]),s._v(" 2、exec 命令")]),s._v(" "),a("p",[s._v("从 Docker 的 1.3.0 版本起，Docker 提供了一个更加方便的工具 "),a("code",[s._v("exec")]),s._v(" 命令，可以在运行中容器内直接执行任意命令。")]),s._v(" "),a("p",[s._v("该命令的基本格式为：")]),s._v(" "),a("p",[a("code",[s._v("docker [container] exec [-d|--detach] [--detach-keys[=[]]] [-i|--interactive] [--privileged] [-t|--tty] [-u|--user[=USER]] CONTAINER COMMAND [ARG...]")])]),s._v(" "),a("p",[s._v("比较重要的参数有：")]),s._v(" "),a("ul",[a("li",[s._v("-d，--detach：在容器中后台执行命令；")]),s._v(" "),a("li",[s._v('--detach-keys=" "：指定将容器切回后台的按键；')]),s._v(" "),a("li",[s._v("-e，--env=[]：指定环境变量列表；")]),s._v(" "),a("li",[s._v("-i，--interactive=true|false：打开标准输入接受用户输入命令，默认值为 false；")]),s._v(" "),a("li",[s._v("--privileged=true|false：是否给执行命令以高权限，默认值为 false；")]),s._v(" "),a("li",[s._v("-t，--tty=true|false：分配伪终端，默认值为 false；")]),s._v(" "),a("li",[s._v('-u，--user=" "：执行命令的用户名或 ID。')])]),s._v(" "),a("p",[s._v("例如，进入到刚创建的容器中，并启动一个 bash：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 4be7970cb6b8 /bin/bash\nroot@4be7970cb6b8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("可以看到会打开一个新的 bash 终端，在不影响容器内其他应用的前提下，用户可以与容器进行交互。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("通过指定 - it 参数来保持标准输入打开，并且分配一个伪终端。通过 "),a("code",[s._v("exec")]),s._v(" 命令对容器执行操作是最为推荐的方式。")])]),s._v(" "),a("p",[s._v("进一步地，可以在容器中查看容器中的用户和进程信息：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@4be7970cb6b8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# w")]),s._v("\n 02:45:03 up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" min,  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" users,  load average: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.39")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.78")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.67")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot@4be7970cb6b8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -ef")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v("        PID  "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PPID")]),s._v("  C STIME TTY          TIME CMD\nroot         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 02:42 pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nroot         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 02:42 pts/1    00:00:00 /bin/bash\nroot        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 02:45 pts/1    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef\nroot@4be7970cb6b8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"删除容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除容器"}},[s._v("#")]),s._v(" 删除容器")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("docker [container] rm")]),s._v(" 命令来删除处于终止或退出状态的容器，命令格式为 "),a("code",[s._v("docker")]),s._v(" "),a("code",[s._v("[container] rm [-f|--force] [-l|--link] [-v|--volumes] CONTAINER [CONTAINER...]")]),s._v("。")]),s._v(" "),a("p",[s._v("主要支持的选项包括：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("-f，--force=false：是否强行终止并删除一个运行中的容器；")])]),s._v(" "),a("li",[a("p",[s._v("-l，--link=false：删除容器的连接，但保留容器；")])]),s._v(" "),a("li",[a("p",[s._v("-v，--volumes=false：删除容器挂载的数据卷。")])])]),s._v(" "),a("p",[s._v("例如，查看处于终止状态的容器，并删除：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE           COMMAND       CREATED          STATUS                      PORTS     NAMES\n4be7970cb6b8   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" minutes                         priceless_chandrasekhar\n3c64d4d3197c   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago       Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                 cool_bell\n08bd1bc56ed2   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago       Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                 gracious_tesla\nc8d20c12cccb   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago       Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v(" minutes ago             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 08bd1bc56ed2\n08bd1bc56ed2\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID   IMAGE           COMMAND       CREATED          STATUS                      PORTS     NAMES\n4be7970cb6b8   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" minutes                         priceless_chandrasekhar\n3c64d4d3197c   centos:latest   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago       Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                 cool_bell\nc8d20c12cccb   ubuntu          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago       Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v(" minutes ago             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("默认情况下，"),a("code",[s._v("docker rm")]),s._v(" 命令只能删除已经处于终止或退出状态的容器，并不能删除还处于运行状态的容器。")]),s._v(" "),a("p",[s._v("如果要直接删除一个运行中的容器，可以添加 -f 参数。Docker 会先发送 SIGKILL 信号给容器，终止其中的应用，之后强行删除：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED          STATUS         PORTS     NAMES\nacca51225fce   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" seconds             musing_edison\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" acca51225fce\nError response from daemon: You cannot remove a running container acca51225fce4f1072a7ffd0fdac860e9d93c1bc8c84db6197d71ea292d7ca90. Stop the container before attempting removal or force remove\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f acca51225fce\nacca51225fce\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"导人和导出容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导人和导出容器"}},[s._v("#")]),s._v(" 导人和导出容器")]),s._v(" "),a("p",[s._v("某些时候，需要将容器从一个系统迁移到另外一个系统，此时可以使用 Docker 的导入和导出功能，这也是 Docker 自身提供的一个重要特性。")]),s._v(" "),a("h3",{attrs:{id:"_1、导出容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、导出容器"}},[s._v("#")]),s._v(" 1、导出容器")]),s._v(" "),a("p",[s._v("导出容器是指，导出一个已经创建的容器到一个文件，不管此时这个容器是否处于运行状态。可以使用 "),a("code",[s._v("docker [container] export")]),s._v(" 命令，该命令格式为：")]),s._v(" "),a("p",[a("code",[s._v('docker [container] export [-o|--output [ =" "] CONTAINER')])]),s._v(" "),a("p",[s._v("其中，可以通过 -o 选项来指定导出的 tar 文件名，也可以直接通过重定向来实现。首先，查看所有的容器，如下所示：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ docker ps -a\nCONTAINER ID   IMAGE           COMMAND       CREATED      STATUS                   PORTS     NAMES\n3c64d4d3197c   centos:latest   "/bin/bash"   2 days ago   Exited (0) 2 days ago              cool_bell\nc8d20c12cccb   ubuntu          "bash"        2 days ago   Exited (0) 2 hours ago             test\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("分别导出 3c64d4d3197c 容器和 c8d20c12cccb 容器到文件 "),a("code",[s._v("cool_for_centos.tar")]),s._v(" 文件和 "),a("code",[s._v("test_for_ubuntu.tar")]),s._v(" 文件：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" -o cool_for_centos.tar 3c64d4d3197c\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l\n总用量 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("211484")]),s._v("\n-rw------- "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("216525312")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(":10 cool_for_centos.tar\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" c8d20c12cccb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test_for_ubuntu.tar\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l\n总用量 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("284884")]),s._v("\n-rw------- "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("216525312")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(":10 cool_for_centos.tar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("之后，可将导出的 tar 文件传输到其他机器上，然后再通过导人命令导入到系统中，实现容器的迁移。")]),s._v(" "),a("h3",{attrs:{id:"_2、导入容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、导入容器"}},[s._v("#")]),s._v(" 2、导入容器")]),s._v(" "),a("p",[s._v("导出的文件又可以使用 "),a("code",[s._v("docker [container] import")]),s._v(" 命令导人变成镜像，该命令格式为：")]),s._v(" "),a("p",[a("code",[s._v("docker import [-c|--change[=[]]] [-m|--message[=MESSAGE]] file|URL|-[REPOSITORY[:TAG]]")])]),s._v(" "),a("p",[s._v("用户可以通过 -c，--change=[] 选项在导人的同时执行对容器进行修改的 Dockerfile 指令（可参考后续相关内容）。")]),s._v(" "),a("p",[s._v("下面将导出的 "),a("code",[s._v("test_for_ubuntu.tar")]),s._v(" 文件导人到系统中：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("r$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" test_for_ubuntu.tar test/ubuntu:v1.0\nsha256:00cf452ac39b9eecff28658850094bac5e345f0ac0f06ff44897873464c7ae00\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\ntest/ubuntu   v1.0      00cf452ac39b   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" seconds ago   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),s._v(".8MB\nubuntu        latest    fb52e22af1b0   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" days ago      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),s._v(".8MB\nubuntu        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.04")]),s._v("     54919e10a95d   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" days ago      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v(".1MB\ncentos        latest    300e315adb2f   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" months ago    209MB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("之前曾介绍过使用 "),a("code",[s._v("docker load")]),s._v(" 命令来导入一个镜像文件，与 "),a("code",[s._v("docke [container] import")]),s._v(" 命令十分类似。\n实际上，既可以使用 "),a("code",[s._v("docker load")]),s._v(" 命令来导入镜像存储文件到本地镜像库，也可以使用 "),a("code",[s._v("docker import")]),s._v(" 命令来导入一个容器快照到本地镜像库。这两者的区别在于：容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积更大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。")]),s._v(" "),a("h2",{attrs:{id:"查看容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看容器"}},[s._v("#")]),s._v(" 查看容器")]),s._v(" "),a("p",[s._v("主要介绍 Docker 容器的 "),a("code",[s._v("inspect")]),s._v("、"),a("code",[s._v("top")]),s._v(" 和 "),a("code",[s._v("stats")]),s._v(" 子命令。")]),s._v(" "),a("h3",{attrs:{id:"_1、查看容器详情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看容器详情"}},[s._v("#")]),s._v(" 1、查看容器详情")]),s._v(" "),a("p",[s._v("查看容器详情可以使用 "),a("code",[s._v("docker container inspect [OPTIONS] CONTAINER [CONTAINER...]")]),s._v("子命令。\n例如，查看某容器的具体信息，会以 json 格式返回包括容器 Id、创建时间、路径、状态、镜像、配置等在内的各项信息：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container inspect "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c8d20c12cccbf317c5f9257b3abe542f98dba3b92b7f72d963427413e5ebf2ad"')]),s._v("，\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Created"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-09-03T07:45:47.300705248Z"')]),s._v("，\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Path"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("，\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Args"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("，\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"State"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exited"')]),s._v("，\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"_2、查看容器内进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看容器内进程"}},[s._v("#")]),s._v(" 2、查看容器内进程")]),s._v(" "),a("p",[s._v("查看容器内进程可以使用 "),a("code",[s._v("docker [container] top [OPTIONS] CONTAINER [CONTAINER...]")]),s._v("子命令。")]),s._v(" "),a("p",[s._v("这个子命令类似于 Linux 系统中的 "),a("code",[s._v("top")]),s._v(" 命令，会打印出容器内的进程信息，包括 PID、用户、时间、命令等。例如，查看某容器内的进程信息，命令如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED      STATUS         PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" seconds             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nkei@kei-KVM:~/docker$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v("                 PID                 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PPID")]),s._v("                C                   STIME               TTY                 TIME                CMD\nroot                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9758")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9723")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":18               pts/0               00:00:00            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_3、查看统计信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、查看统计信息"}},[s._v("#")]),s._v(" 3、查看统计信息")]),s._v(" "),a("p",[s._v("查看统计信息可以使用 "),a("code",[s._v("docker [container] stats [OPTIONS] [CONTAINER...]")]),s._v(" 子命令，会显示 CPU、内存、存储、网络等使用情况的统计信息。")]),s._v(" "),a("p",[s._v("支持选项包括：")]),s._v(" "),a("ul",[a("li",[s._v("a，-all：输出所有容器统计信息，默认仅在运行中；")]),s._v(" "),a("li",[s._v("-format string：格式化输出信息；")]),s._v(" "),a("li",[s._v("-no-stream：不持续输出，默认会自动更新持续实时结果；")]),s._v(" "),a("li",[s._v("-no-trunc：不截断输出信息。")])]),s._v(" "),a("p",[s._v("例如，查看当前运行中容器的系统资源使用统计：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stats\nCONTAINER ID   NAME      CPU %     MEM USAGE / LIMIT     MEM %     NET I/O       BLOCK I/O     PIDS\nc8d20c12cccb   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("%     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".562MiB / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".844GiB   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.07")]),s._v("%     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".51kB / 0B   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".25MB / 0B   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可使用 Ctrl + C 退出")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"其他容器命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他容器命令"}},[s._v("#")]),s._v(" 其他容器命令")]),s._v(" "),a("p",[s._v("主要介绍 Docker 容器的 "),a("code",[s._v("cp")]),s._v("、"),a("code",[s._v("diff")]),s._v("、"),a("code",[s._v("port")]),s._v(" 和 "),a("code",[s._v("update")]),s._v(" 子命令。")]),s._v(" "),a("h3",{attrs:{id:"_1、复制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、复制文件"}},[s._v("#")]),s._v(" 1、复制文件")]),s._v(" "),a("p",[a("code",[s._v("container cp")]),s._v(" 命令支持在容器和主机之间复制文件。")]),s._v(" "),a("p",[s._v("命令格式为 "),a("code",[s._v("docker [container] cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-")]),s._v("。支持的选项包括 ：")]),s._v(" "),a("ul",[a("li",[s._v("-a，-archive：打包模式，复制文件会带有原始的 uid/gid 信息；")]),s._v(" "),a("li",[s._v("-L，-follow-link：跟随软连接。当原路径为软连接时，默认只复制链接信息，使用该选项会复制链接的目标内容。")])]),s._v(" "),a("p",[s._v("例如，将本地的路径 data 复制到 test 容器的 /tmp 路径下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" test_file.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" test_file.txt \n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" test_file.txt \nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED      STATUS          PORTS     NAMES\nc8d20c12cccb   ubuntu    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" minutes             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" test_file.txt test:/tmp/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" attach "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \nroot@c8d20c12cccb:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd /tmp/ && ls")]),s._v("\ntest_file.txt\nroot@c8d20c12cccb:/tmp"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat test_file.txt ")]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nroot@c8d20c12cccb:/tmp"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"_2、查看变更"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看变更"}},[s._v("#")]),s._v(" 2、查看变更")]),s._v(" "),a("p",[a("code",[s._v("container diff")]),s._v(" 查看容器内文件系统的变更。")]),s._v(" "),a("p",[s._v("命令格式为 "),a("code",[s._v("docker [container] diff CONTAINER")]),s._v("。例如，查看 test 容器内的数据修改：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \nC /root\nA /root/.bash_history\nC /tmp\nA /tmp/test_file.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3、查看端口映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、查看端口映射"}},[s._v("#")]),s._v(" 3、查看端口映射")]),s._v(" "),a("p",[a("code",[s._v("container port")]),s._v(" 命令可以查看容器的端口映射’情况。")]),s._v(" "),a("p",[s._v("命令格式为 "),a("code",[s._v("docker container port CONTAINER [PRIVATE_PORT[/PROTO]]")]),s._v("。例如，查看 test 容器的端口映射’情况：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container port "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("/tcp -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:9000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4、更新配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、更新配置"}},[s._v("#")]),s._v(" 4、更新配置")]),s._v(" "),a("p",[a("code",[s._v("container update")]),s._v(" 命令可以更新容器的一些运行时配置，主要是一些资源限制份额。")]),s._v(" "),a("p",[s._v("命令格式为 "),a("code",[s._v("docker [container] update [OPTIONS] CONTAINER [CONTAINER...]")]),s._v("。")]),s._v(" "),a("p",[s._v("支持的选项包括：")]),s._v(" "),a("ul",[a("li",[s._v("blkio-weight uint16：更新块 IO 限制，10~1000，默认值为 0，代表着无限制；")]),s._v(" "),a("li",[s._v("-cpu-period int：限制 CPU 调度器 CFS（Completely Fair Scheduler）使用时间，单位为微秒，最小 1000；")]),s._v(" "),a("li",[s._v("-cpu-quota int：限制 CPU 调度器 CFS 配额，单位为微秒，最小 1000；")]),s._v(" "),a("li",[s._v("-cpu-rt-period int：限制 CPU 调度器的实时周期，单位为微秒；")]),s._v(" "),a("li",[s._v("-cpu-rt-runtime int：限制 CPU 调度器的实时运行时，单位为微秒；")]),s._v(" "),a("li",[s._v("-c，-cpu-shares int：限制 CPU 使用份额；")]),s._v(" "),a("li",[s._v("-cpus decimal：限制 CPU 个数；")]),s._v(" "),a("li",[s._v("-cpuset-cpus string：允许使用的 CPU 核，如 0-3，0，1；")]),s._v(" "),a("li",[s._v("-cpuset-mems string：允许使用的内存块，如 0-3，0，1；")]),s._v(" "),a("li",[s._v("-kernel-memory bytes：限制使用的内核内存；")]),s._v(" "),a("li",[s._v("-m，-memory bytes：限制使用的内存；")]),s._v(" "),a("li",[s._v("-memory-reservation bytes：内存软限制；")]),s._v(" "),a("li",[s._v("-memory-swap bytes：内存加上缓存区的限制，-1 表示为对缓冲区无限制；")]),s._v(" "),a("li",[s._v("-restart string：容器退出后的重启策略。")])]),s._v(" "),a("p",[s._v("例如，限制总配额为 1 秒，容器 test 所占用时间为 10% ，代码如下所示：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" update --cpu-quota "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" update --cpu-period "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("容器是直接提供应用服务的组件，也是 Docker 整个技术核中最为核心的概念。围绕容器，Docker 提供了十分丰富的操作命令，允许用户高效地管理容器的整个生命周期。你可以使用 "),a("code",[s._v("docker container help")]),s._v(" 命令查看 Docker 支持的容器操作子命令。")])])}),[],!1,null,null,null);t.default=e.exports}}]);